name: $(Build.BuildId)$(Rev:.r)_$(SourceBranchName)EUBNPAPI-$(Date:MMddyyyy)

trigger:
  branches:
    include:
    - dev
    - test
    - stage
    - main
jobs:
- job: build
  displayName: build image
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - powershell: |
      Write-Host $BRANCH
      Write-Host $env:BRANCH

      $split = $env:BRANCH.Split("/")
      Write-Host "segments: $($split.Length)"
      $projectName = $split[($split.Length -2)]
      $sourceBranch = $split[($split.Length -1)..($split.Length - 1)] -Join "-"


      If ($split.Length -eq 3 ) {
          $projectName = "main"
          $sourceBranch = $split[2]
      }
      
      $imageName = "eubnpapi"
      $imageTag = "$projectName-$sourceBranch-$(Build.BuildId)"


      Write-Host $projectName
      Write-Host $sourceBranch
      Write-Host $imageName

      Write-Host "##vso[task.setvariable variable=project;isOutput=true;]$projectName"
      Write-Host "##vso[task.setvariable variable=sourceBranchName;isOutput=true;]$sourceBranch"
      Write-Host "##vso[task.setvariable variable=imageName;isOutput=true;]$imageName"
      Write-Host "##vso[task.setvariable variable=imageTag;isOutput=true;]$imageTag"
    name: branch
    env:
      BRANCH: $(Build.SourceBranch)
  - task: Docker@2
    displayName: 'Build Image'
    inputs:
      containerRegistry: 'EUD API Container Registry - Non-prod'
      repository: eubnpapi
      command: build
      Dockerfile: src/Dockerfile
      tags: |
        $(branch.project)-$(branch.sourceBranchName)-$(Build.BuildId)
        $(branch.project)-$(branch.sourceBranchName)-latest
        $(Build.BuildId)
        latest
  - task: Docker@2
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual'))
    displayName: 'Push Image'
    inputs:
      containerRegistry: 'EUD API Container Registry - Non-prod'
      repository: eubnpapi
      command: push
      tags: |
        $(branch.project)-$(branch.sourceBranchName)-$(Build.BuildId)
        $(branch.project)-$(branch.sourceBranchName)-latest
        $(Build.BuildId)
        latest